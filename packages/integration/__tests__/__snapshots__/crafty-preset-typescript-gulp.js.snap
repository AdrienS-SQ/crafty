// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Compiles TypeScript 1`] = `
Object {
  "status": 0,
  "stderr": "",
  "stdout": "
[__:__:__] Starting Crafty __version__...
[__:__:__] Files will be stored in:
            js: __PATH__/packages/integration/fixtures/crafty-preset-typescript-gulp/compiles/dist/js
[__:__:__] Starting 'default' ...
[__:__:__] Starting 'js' ...
[__:__:__] Starting 'js_myBundle' ...
[__:__:__] Finished 'js_myBundle' after ____ ms
[__:__:__] Finished 'js' after ____ ms
[__:__:__] Finished 'default' after ____ ms
",
}
`;

exports[`Compiles TypeScript 2`] = `
"import { test } from \\"./Component\\";
var NewStuff = /** @class */ (function () {
    function NewStuff() {
        // tslint:disable-next-line no-console
        console.log(\\"init class\\");
    }
    NewStuff.prototype.method = function () {
        // tslint:disable-next-line no-console
        console.log(test(2, 4));
        import(\\"./SomeLibrary\\").then(function (SomeLibrary) {
            var som = new SomeLibrary.default();
            // tslint:disable-next-line no-console
            console.log(som.add(2, 4));
        });
    };
    return NewStuff;
}());
export default NewStuff;

//# sourceMappingURL=script.js.map
"
`;

exports[`Compiles TypeScript 3`] = `
"export function test(a, b) {
    return a + b;
}

//# sourceMappingURL=Component.js.map
"
`;

exports[`Compiles TypeScript and concatenates 1`] = `
Object {
  "status": 0,
  "stderr": "",
  "stdout": "
[__:__:__] Starting Crafty __version__...
[__:__:__] Files will be stored in:
            js: __PATH__/packages/integration/fixtures/crafty-preset-typescript-gulp/concatenates/dist/js
[__:__:__] Starting 'default' ...
[__:__:__] Starting 'js' ...
[__:__:__] Starting 'js_myBundle' ...
[__:__:__] Finished 'js_myBundle' after ____ ms
[__:__:__] Finished 'js' after ____ ms
[__:__:__] Finished 'default' after ____ ms
",
}
`;

exports[`Compiles TypeScript and concatenates 2`] = `
"export function test(a, b) {
    return a + b;
}

var SomeLibrary = /** @class */ (function () {
    function SomeLibrary() {
    }
    SomeLibrary.prototype.add = function (a, b) {
        return a + b;
    };
    SomeLibrary.prototype.substract = function (a, b) {
        return a - b;
    };
    SomeLibrary.prototype.divide = function (a, b) {
        return a / b;
    };
    return SomeLibrary;
}());
export default SomeLibrary;

import { test } from \\"./Component\\";
var NewStuff = /** @class */ (function () {
    function NewStuff() {
        // tslint:disable-next-line no-console
        console.log(\\"init class\\");
    }
    NewStuff.prototype.method = function () {
        // tslint:disable-next-line no-console
        console.log(test(2, 4));
        import(\\"./SomeLibrary\\").then(function (SomeLibrary) {
            var som = new SomeLibrary.default();
            // tslint:disable-next-line no-console
            console.log(som.add(2, 4));
        });
    };
    return NewStuff;
}());
export default NewStuff;

//# sourceMappingURL=myBundle.min.js.map
"
`;

exports[`Fails gracefully on broken markup 1`] = `
Object {
  "status": 0,
  "stderr": "js/SomeLibrary.ts(10,1): error TS1005: '}' expected.
",
  "stdout": "
[__:__:__] Starting Crafty __version__...
[__:__:__] Files will be stored in:
            js: __PATH__/packages/integration/fixtures/crafty-preset-typescript-gulp/fails/dist/js
[__:__:__] Starting 'default' ...
[__:__:__] Starting 'js' ...
[__:__:__] Starting 'js_myBundle' ...
[__:__:__] TypeScript: 1 syntax error
[__:__:__] TypeScript: emit succeeded (with errors)
[__:__:__] Finished 'js_myBundle' after ____ ms
[__:__:__] Finished 'js' after ____ ms
[__:__:__] Finished 'default' after ____ ms
",
}
`;

exports[`Lints TypeScript 1`] = `
Object {
  "status": 1,
  "stderr": "[__:__:__] 'js_myBundle' errored after ____ ms
[__:__:__] Error in plugin 'gulp-tslint'
Message:
    Failed to lint: __PATH__/packages/integration/fixtures/crafty-preset-typescript-gulp/lints/js/Component.ts [2, 24]: missing whitespace, __PATH__/packages/integration/fixtures/crafty-preset-typescript-gulp/lints/js/Component.ts [3, 18]: Multiple spaces found before 'b'., __PATH__/packages/integration/fixtures/crafty-preset-typescript-gulp/lints/js/SomeLibrary.ts [12, 5]: misplaced opening brace, __PATH__/packages/integration/fixtures/crafty-preset-typescript-gulp/lints/js/script.ts [13, 5]: misplaced opening brace, __PATH__/packages/integration/fixtures/crafty-preset-typescript-gulp/lints/js/script.ts [6, 5]: Calls to 'console.log' are not allowed., __PATH__/packages/integration/fixtures/crafty-preset-typescript-gulp/lints/js/script.ts [10, 5]: Calls to 'console.log' are not allowed., __PATH__/packages/integration/fixtures/crafty-preset-typescript-gulp/lints/js/script.ts [16, 7]: Calls to 'console.log' are not allowed., __PATH__/packages/integration/fixtures/crafty-preset-typescript-gulp/lints/js/script.ts [17, 7]: Missing semicolon.
Details:
    domain: [object Object]
    domainThrown: true
[__:__:__] 'js' errored after ____ ms
[__:__:__] 'default' errored after ____ ms
",
  "stdout": "
[__:__:__] Starting Crafty __version__...
[__:__:__] Files will be stored in:
            js: __PATH__/packages/integration/fixtures/crafty-preset-typescript-gulp/lints/dist/js
[__:__:__] Starting 'default' ...
[__:__:__] Starting 'js' ...
[__:__:__] Starting 'js_myBundle' ...
__PATH__/packages/integration/fixtures/crafty-preset-typescript-gulp/lints/js/Component.ts:2:24
ERROR: 2:24  whitespace       missing whitespace
ERROR: 3:18  no-multi-spaces  Multiple spaces found before 'b'.

__PATH__/packages/integration/fixtures/crafty-preset-typescript-gulp/lints/js/SomeLibrary.ts:12:5
ERROR: 12:5  one-line  misplaced opening brace

__PATH__/packages/integration/fixtures/crafty-preset-typescript-gulp/lints/js/script.ts:6:5
ERROR: 6:5   no-console  Calls to 'console.log' are not allowed.
ERROR: 10:5  no-console  Calls to 'console.log' are not allowed.
ERROR: 13:5  one-line    misplaced opening brace
ERROR: 16:7  no-console  Calls to 'console.log' are not allowed.
ERROR: 17:7  semicolon   Missing semicolon

",
}
`;
